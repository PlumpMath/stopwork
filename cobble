#!/usr/bin/env ruby

require "optparse"

require "rack"
require "erb"
require "json"
require "kramdown"

class String
  def to_title
    gsub(/[-_.\s]([a-zA-Z0-9])/) { $1.upcase }.gsub(/([A-Z])/) { " #{$1}"}.gsub(/^([a-z])/) { $1.upcase }
  end
end

module Cobble
  class Compiler
    def self.compile source
      source.split("\n").
        reject { |e| e.empty? }.    # empty lines
        reject { |e| e =~ /^\/\// } # comments
    end
  end

  class Slideshow
    attr_accessor :title

    def initialize file
      @title = File.basename(file, '.*').to_title + " - Cobble"
      @slides = Compiler.compile open(file).read
      @template = ERB.new open("slideshow.erb").read
    end

    def init_script
      "$(function() { Stopwork.present(#{JSON.pretty_generate(@slides)}); })"
    end

    def to_html
      @template.result binding
    end

    def to_json
      @slideshow.to_json
    end
  end

  class Server < Rack::Directory
    def initialize file
      @file = file
      super File.dirname(file)
    end

    def call env
      if env['REQUEST_PATH'] == "/"
        [200, {'Content-Type' => 'text/html'}, Slideshow.new(@file).to_html]
      else
        super
      end
    end
  end
end

Encoding.default_external = Encoding::UTF_8
Encoding.default_internal = Encoding::UTF_8

Rack::Handler::Thin.run Cobble::Server.new(ARGV.first), Port:54021